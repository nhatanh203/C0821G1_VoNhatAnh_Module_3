1. Dependency Management là gì? Mục đích?

Công cụ quản lý thư viện phụ thuộc (Dependence Management tool)
• Là những phần mềm giúp tích hợp thư viện phụ thuộc vào bản thân chương trình đang được phát triển. Ví dụ Composer,NPM,Ant, Maven,Gradle...

• Sử dụng những file cấu hình (chẳng hạn composer.json, package.json, pom.xml,build.gradle...)để làm rõ:
• Những phụ thuộc nào cần tìm về
• Phiên bản nào cần tìm về
• Tìm các phụ thuộc về từ repository nào


2. So sánh Ant, Maven, Gradle?

Apache Ant: một công cụ viết bằng Java, được xây dựng với mục đích làm một build tool uyển chuyển cho các ứng dụng Java.Sử dụng định dạng XML cho tập tin cấu hình.
• Apache Maven: một công cụ quản lý thư viện phụ thuộc kiêm build tool cho các ứng dụng Java. Khả năng quản lý tốt hơn so với Ant, nhưng kém uyển chuyển hơn.Sử dụng định dạng XML cho tập tin cấu hình.
• Gradle: một công cụ quản lý thư viện phụ thuộc kiêm build tool cho các ứng dụng Java. Được xây dựng trên concept của Antvà Maven.Sử dụng ngôn ngữ Groovy cho tập tin cấu hình.

3. Packaging là gì? Mục đích?

 